// NOT generated by openapi-ts

import { CompositeDate as CompositeDateType, DateWithPrecisionInput, DateWithPrecision as DateWithPrecisionType } from "./types.gen"

export type CompositeDate = CompositeDateType
export namespace CompositeDate {
  export function fromDateWithPrecision({ precision, date }: DateWithPrecision): CompositeDate {
    if (precision === 'Unknown' || !date) return {}
    switch (precision) {
      case 'Year':
        return { year: date.getFullYear() }
      case 'Month':
        // JS months start at 0, because ✨ JS ✨
        return { month: date.getMonth() + 1, year: date.getFullYear() }
      case 'Day':
        return { day: date.getDate(), month: date.getMonth() + 1, year: date?.getFullYear() }
    }
  }
}


export type DateWithPrecision = DateWithPrecisionType
export namespace DateWithPrecision {
  export function toInput({ date, precision }: DateWithPrecision): DateWithPrecisionInput {
    return { date: CompositeDate.fromDateWithPrecision({ date, precision }), precision }
  }
}